// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: paxos_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "paxos_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace phxpaxos {

namespace {

const ::google::protobuf::Descriptor* Header_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Header_reflection_ = NULL;
const ::google::protobuf::Descriptor* PaxosMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PaxosMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* CheckpointMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CheckpointMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* AcceptorStateData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AcceptorStateData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PaxosNodeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PaxosNodeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* SystemVariables_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SystemVariables_reflection_ = NULL;
const ::google::protobuf::Descriptor* MasterVariables_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MasterVariables_reflection_ = NULL;
const ::google::protobuf::Descriptor* PaxosValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PaxosValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* BatchPaxosValues_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BatchPaxosValues_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_paxos_5fmsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_paxos_5fmsg_2eproto() {
  protobuf_AddDesc_paxos_5fmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "paxos_msg.proto");
  GOOGLE_CHECK(file != NULL);
  Header_descriptor_ = file->message_type(0);
  static const int Header_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, gid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, cmdid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, version_),
  };
  Header_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Header_descriptor_,
      Header::default_instance_,
      Header_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, _has_bits_[0]),
      -1,
      -1,
      sizeof(Header),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, _internal_metadata_),
      -1);
  PaxosMsg_descriptor_ = file->message_type(1);
  static const int PaxosMsg_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, instanceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, proposalid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, proposalnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, preacceptid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, preacceptnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, rejectbypromiseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, nowinstanceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, minchoseninstanceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, lastchecksum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, systemvariables_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, mastervariables_),
  };
  PaxosMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PaxosMsg_descriptor_,
      PaxosMsg::default_instance_,
      PaxosMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(PaxosMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, _internal_metadata_),
      -1);
  CheckpointMsg_descriptor_ = file->message_type(2);
  static const int CheckpointMsg_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, sequence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, checkpointinstanceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, checksum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, filepath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, smid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, buffer_),
  };
  CheckpointMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CheckpointMsg_descriptor_,
      CheckpointMsg::default_instance_,
      CheckpointMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(CheckpointMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, _internal_metadata_),
      -1);
  AcceptorStateData_descriptor_ = file->message_type(3);
  static const int AcceptorStateData_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, instanceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, promiseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, promisenodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, acceptedid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, acceptednodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, acceptedvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, checksum_),
  };
  AcceptorStateData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AcceptorStateData_descriptor_,
      AcceptorStateData::default_instance_,
      AcceptorStateData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, _has_bits_[0]),
      -1,
      -1,
      sizeof(AcceptorStateData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, _internal_metadata_),
      -1);
  PaxosNodeInfo_descriptor_ = file->message_type(4);
  static const int PaxosNodeInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosNodeInfo, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosNodeInfo, nodeid_),
  };
  PaxosNodeInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PaxosNodeInfo_descriptor_,
      PaxosNodeInfo::default_instance_,
      PaxosNodeInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosNodeInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(PaxosNodeInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosNodeInfo, _internal_metadata_),
      -1);
  SystemVariables_descriptor_ = file->message_type(5);
  static const int SystemVariables_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, gid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, membership_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, version_),
  };
  SystemVariables_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SystemVariables_descriptor_,
      SystemVariables::default_instance_,
      SystemVariables_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, _has_bits_[0]),
      -1,
      -1,
      sizeof(SystemVariables),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, _internal_metadata_),
      -1);
  MasterVariables_descriptor_ = file->message_type(6);
  static const int MasterVariables_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, masternodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, leasetime_),
  };
  MasterVariables_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MasterVariables_descriptor_,
      MasterVariables::default_instance_,
      MasterVariables_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, _has_bits_[0]),
      -1,
      -1,
      sizeof(MasterVariables),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, _internal_metadata_),
      -1);
  PaxosValue_descriptor_ = file->message_type(7);
  static const int PaxosValue_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosValue, smid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosValue, value_),
  };
  PaxosValue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PaxosValue_descriptor_,
      PaxosValue::default_instance_,
      PaxosValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosValue, _has_bits_[0]),
      -1,
      -1,
      sizeof(PaxosValue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosValue, _internal_metadata_),
      -1);
  BatchPaxosValues_descriptor_ = file->message_type(8);
  static const int BatchPaxosValues_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchPaxosValues, values_),
  };
  BatchPaxosValues_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BatchPaxosValues_descriptor_,
      BatchPaxosValues::default_instance_,
      BatchPaxosValues_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchPaxosValues, _has_bits_[0]),
      -1,
      -1,
      sizeof(BatchPaxosValues),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchPaxosValues, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_paxos_5fmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Header_descriptor_, &Header::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PaxosMsg_descriptor_, &PaxosMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CheckpointMsg_descriptor_, &CheckpointMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AcceptorStateData_descriptor_, &AcceptorStateData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PaxosNodeInfo_descriptor_, &PaxosNodeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SystemVariables_descriptor_, &SystemVariables::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MasterVariables_descriptor_, &MasterVariables::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PaxosValue_descriptor_, &PaxosValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BatchPaxosValues_descriptor_, &BatchPaxosValues::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_paxos_5fmsg_2eproto() {
  delete Header::default_instance_;
  delete Header_reflection_;
  delete PaxosMsg::default_instance_;
  delete PaxosMsg_reflection_;
  delete CheckpointMsg::default_instance_;
  delete CheckpointMsg_reflection_;
  delete AcceptorStateData::default_instance_;
  delete AcceptorStateData_reflection_;
  delete PaxosNodeInfo::default_instance_;
  delete PaxosNodeInfo_reflection_;
  delete SystemVariables::default_instance_;
  delete SystemVariables_reflection_;
  delete MasterVariables::default_instance_;
  delete MasterVariables_reflection_;
  delete PaxosValue::default_instance_;
  delete PaxosValue_reflection_;
  delete BatchPaxosValues::default_instance_;
  delete BatchPaxosValues_reflection_;
}

void protobuf_AddDesc_paxos_5fmsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_paxos_5fmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017paxos_msg.proto\022\010phxpaxos\"B\n\006Header\022\013\n"
    "\003gid\030\001 \002(\004\022\013\n\003rid\030\002 \002(\004\022\r\n\005cmdid\030\003 \002(\005\022\017"
    "\n\007version\030\004 \001(\005\"\315\002\n\010PaxosMsg\022\017\n\007MsgType\030"
    "\001 \002(\005\022\022\n\nInstanceID\030\002 \001(\004\022\016\n\006NodeID\030\003 \001("
    "\004\022\022\n\nProposalID\030\004 \001(\004\022\026\n\016ProposalNodeID\030"
    "\005 \001(\004\022\r\n\005Value\030\006 \001(\014\022\023\n\013PreAcceptID\030\007 \001("
    "\004\022\027\n\017PreAcceptNodeID\030\010 \001(\004\022\031\n\021RejectByPr"
    "omiseID\030\t \001(\004\022\025\n\rNowInstanceID\030\n \001(\004\022\033\n\023"
    "MinChosenInstanceID\030\013 \001(\004\022\024\n\014LastChecksu"
    "m\030\014 \001(\r\022\014\n\004Flag\030\r \001(\r\022\027\n\017SystemVariables"
    "\030\016 \001(\014\022\027\n\017MasterVariables\030\017 \001(\014\"\316\001\n\rChec"
    "kpointMsg\022\017\n\007MsgType\030\001 \002(\005\022\016\n\006NodeID\030\002 \002"
    "(\004\022\014\n\004Flag\030\003 \001(\005\022\014\n\004UUID\030\004 \002(\004\022\020\n\010Sequen"
    "ce\030\005 \002(\004\022\034\n\024CheckpointInstanceID\030\006 \001(\004\022\020"
    "\n\010Checksum\030\007 \001(\r\022\020\n\010FilePath\030\010 \001(\t\022\014\n\004SM"
    "ID\030\t \001(\005\022\016\n\006Offset\030\n \001(\004\022\016\n\006Buffer\030\013 \001(\014"
    "\"\246\001\n\021AcceptorStateData\022\022\n\nInstanceID\030\001 \002"
    "(\004\022\021\n\tPromiseID\030\002 \002(\004\022\025\n\rPromiseNodeID\030\003"
    " \002(\004\022\022\n\nAcceptedID\030\004 \002(\004\022\026\n\016AcceptedNode"
    "ID\030\005 \002(\004\022\025\n\rAcceptedValue\030\006 \002(\014\022\020\n\010Check"
    "sum\030\007 \002(\r\",\n\rPaxosNodeInfo\022\013\n\003Rid\030\001 \002(\004\022"
    "\016\n\006Nodeid\030\002 \002(\004\"\\\n\017SystemVariables\022\013\n\003Gi"
    "d\030\001 \002(\004\022+\n\nMemberShip\030\002 \003(\0132\027.phxpaxos.P"
    "axosNodeInfo\022\017\n\007Version\030\003 \002(\004\"K\n\017MasterV"
    "ariables\022\024\n\014MasterNodeid\030\001 \002(\004\022\017\n\007Versio"
    "n\030\002 \002(\004\022\021\n\tLeaseTime\030\003 \002(\r\")\n\nPaxosValue"
    "\022\014\n\004SMID\030\001 \002(\005\022\r\n\005Value\030\002 \002(\014\"8\n\020BatchPa"
    "xosValues\022$\n\006Values\030\001 \003(\0132\024.phxpaxos.Pax"
    "osValue", 1127);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "paxos_msg.proto", &protobuf_RegisterTypes);
  Header::default_instance_ = new Header();
  PaxosMsg::default_instance_ = new PaxosMsg();
  CheckpointMsg::default_instance_ = new CheckpointMsg();
  AcceptorStateData::default_instance_ = new AcceptorStateData();
  PaxosNodeInfo::default_instance_ = new PaxosNodeInfo();
  SystemVariables::default_instance_ = new SystemVariables();
  MasterVariables::default_instance_ = new MasterVariables();
  PaxosValue::default_instance_ = new PaxosValue();
  BatchPaxosValues::default_instance_ = new BatchPaxosValues();
  Header::default_instance_->InitAsDefaultInstance();
  PaxosMsg::default_instance_->InitAsDefaultInstance();
  CheckpointMsg::default_instance_->InitAsDefaultInstance();
  AcceptorStateData::default_instance_->InitAsDefaultInstance();
  PaxosNodeInfo::default_instance_->InitAsDefaultInstance();
  SystemVariables::default_instance_->InitAsDefaultInstance();
  MasterVariables::default_instance_->InitAsDefaultInstance();
  PaxosValue::default_instance_->InitAsDefaultInstance();
  BatchPaxosValues::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_paxos_5fmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_paxos_5fmsg_2eproto {
  StaticDescriptorInitializer_paxos_5fmsg_2eproto() {
    protobuf_AddDesc_paxos_5fmsg_2eproto();
  }
} static_descriptor_initializer_paxos_5fmsg_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Header::kGidFieldNumber;
const int Header::kRidFieldNumber;
const int Header::kCmdidFieldNumber;
const int Header::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Header::Header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.Header)
}

void Header::InitAsDefaultInstance() {
}

Header::Header(const Header& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phxpaxos.Header)
}

void Header::SharedCtor() {
  _cached_size_ = 0;
  gid_ = GOOGLE_ULONGLONG(0);
  rid_ = GOOGLE_ULONGLONG(0);
  cmdid_ = 0;
  version_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Header::~Header() {
  // @@protoc_insertion_point(destructor:phxpaxos.Header)
  SharedDtor();
}

void Header::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Header::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Header::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Header_descriptor_;
}

const Header& Header::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_paxos_5fmsg_2eproto();
  return *default_instance_;
}

Header* Header::default_instance_ = NULL;

Header* Header::New(::google::protobuf::Arena* arena) const {
  Header* n = new Header;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.Header)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Header, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Header*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(gid_, version_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.Header)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 gid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gid_)));
          set_has_gid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rid;
        break;
      }

      // required uint64 rid = 2;
      case 2: {
        if (tag == 16) {
         parse_rid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));
          set_has_rid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_cmdid;
        break;
      }

      // required int32 cmdid = 3;
      case 3: {
        if (tag == 24) {
         parse_cmdid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmdid_)));
          set_has_cmdid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_version;
        break;
      }

      // optional int32 version = 4;
      case 4: {
        if (tag == 32) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.Header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.Header)
  return false;
#undef DO_
}

void Header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.Header)
  // required uint64 gid = 1;
  if (has_gid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gid(), output);
  }

  // required uint64 rid = 2;
  if (has_rid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->rid(), output);
  }

  // required int32 cmdid = 3;
  if (has_cmdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cmdid(), output);
  }

  // optional int32 version = 4;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.Header)
}

::google::protobuf::uint8* Header::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.Header)
  // required uint64 gid = 1;
  if (has_gid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gid(), target);
  }

  // required uint64 rid = 2;
  if (has_rid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->rid(), target);
  }

  // required int32 cmdid = 3;
  if (has_cmdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cmdid(), target);
  }

  // optional int32 version = 4;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.Header)
  return target;
}

int Header::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.Header)
  int total_size = 0;

  if (has_gid()) {
    // required uint64 gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());
  }

  if (has_rid()) {
    // required uint64 rid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  if (has_cmdid()) {
    // required int32 cmdid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmdid());
  }

  return total_size;
}
int Header::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.Header)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());

    // required uint64 rid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());

    // required int32 cmdid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmdid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 version = 4;
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.Header)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Header* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Header>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.Header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.Header)
    MergeFrom(*source);
  }
}

void Header::MergeFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.Header)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gid()) {
      set_gid(from.gid());
    }
    if (from.has_rid()) {
      set_rid(from.rid());
    }
    if (from.has_cmdid()) {
      set_cmdid(from.cmdid());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Header::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Header::Swap(Header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Header::InternalSwap(Header* other) {
  std::swap(gid_, other->gid_);
  std::swap(rid_, other->rid_);
  std::swap(cmdid_, other->cmdid_);
  std::swap(version_, other->version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Header::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Header_descriptor_;
  metadata.reflection = Header_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Header

// required uint64 gid = 1;
bool Header::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Header::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
void Header::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Header::clear_gid() {
  gid_ = GOOGLE_ULONGLONG(0);
  clear_has_gid();
}
 ::google::protobuf::uint64 Header::gid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.Header.gid)
  return gid_;
}
 void Header::set_gid(::google::protobuf::uint64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.Header.gid)
}

// required uint64 rid = 2;
bool Header::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Header::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
void Header::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
void Header::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
 ::google::protobuf::uint64 Header::rid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.Header.rid)
  return rid_;
}
 void Header::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.Header.rid)
}

// required int32 cmdid = 3;
bool Header::has_cmdid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Header::set_has_cmdid() {
  _has_bits_[0] |= 0x00000004u;
}
void Header::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000004u;
}
void Header::clear_cmdid() {
  cmdid_ = 0;
  clear_has_cmdid();
}
 ::google::protobuf::int32 Header::cmdid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.Header.cmdid)
  return cmdid_;
}
 void Header::set_cmdid(::google::protobuf::int32 value) {
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.Header.cmdid)
}

// optional int32 version = 4;
bool Header::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Header::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
void Header::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
void Header::clear_version() {
  version_ = 0;
  clear_has_version();
}
 ::google::protobuf::int32 Header::version() const {
  // @@protoc_insertion_point(field_get:phxpaxos.Header.version)
  return version_;
}
 void Header::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.Header.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaxosMsg::kMsgTypeFieldNumber;
const int PaxosMsg::kInstanceIDFieldNumber;
const int PaxosMsg::kNodeIDFieldNumber;
const int PaxosMsg::kProposalIDFieldNumber;
const int PaxosMsg::kProposalNodeIDFieldNumber;
const int PaxosMsg::kValueFieldNumber;
const int PaxosMsg::kPreAcceptIDFieldNumber;
const int PaxosMsg::kPreAcceptNodeIDFieldNumber;
const int PaxosMsg::kRejectByPromiseIDFieldNumber;
const int PaxosMsg::kNowInstanceIDFieldNumber;
const int PaxosMsg::kMinChosenInstanceIDFieldNumber;
const int PaxosMsg::kLastChecksumFieldNumber;
const int PaxosMsg::kFlagFieldNumber;
const int PaxosMsg::kSystemVariablesFieldNumber;
const int PaxosMsg::kMasterVariablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaxosMsg::PaxosMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.PaxosMsg)
}

void PaxosMsg::InitAsDefaultInstance() {
}

PaxosMsg::PaxosMsg(const PaxosMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phxpaxos.PaxosMsg)
}

void PaxosMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgtype_ = 0;
  instanceid_ = GOOGLE_ULONGLONG(0);
  nodeid_ = GOOGLE_ULONGLONG(0);
  proposalid_ = GOOGLE_ULONGLONG(0);
  proposalnodeid_ = GOOGLE_ULONGLONG(0);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preacceptid_ = GOOGLE_ULONGLONG(0);
  preacceptnodeid_ = GOOGLE_ULONGLONG(0);
  rejectbypromiseid_ = GOOGLE_ULONGLONG(0);
  nowinstanceid_ = GOOGLE_ULONGLONG(0);
  minchoseninstanceid_ = GOOGLE_ULONGLONG(0);
  lastchecksum_ = 0u;
  flag_ = 0u;
  systemvariables_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mastervariables_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PaxosMsg::~PaxosMsg() {
  // @@protoc_insertion_point(destructor:phxpaxos.PaxosMsg)
  SharedDtor();
}

void PaxosMsg::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  systemvariables_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mastervariables_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PaxosMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaxosMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PaxosMsg_descriptor_;
}

const PaxosMsg& PaxosMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_paxos_5fmsg_2eproto();
  return *default_instance_;
}

PaxosMsg* PaxosMsg::default_instance_ = NULL;

PaxosMsg* PaxosMsg::New(::google::protobuf::Arena* arena) const {
  PaxosMsg* n = new PaxosMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaxosMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.PaxosMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PaxosMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PaxosMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(instanceid_, proposalnodeid_);
    ZR_(preacceptid_, preacceptnodeid_);
    msgtype_ = 0;
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 32512u) {
    ZR_(rejectbypromiseid_, minchoseninstanceid_);
    lastchecksum_ = 0u;
    flag_ = 0u;
    if (has_systemvariables()) {
      systemvariables_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mastervariables()) {
      mastervariables_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PaxosMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.PaxosMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 MsgType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgtype_)));
          set_has_msgtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_InstanceID;
        break;
      }

      // optional uint64 InstanceID = 2;
      case 2: {
        if (tag == 16) {
         parse_InstanceID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instanceid_)));
          set_has_instanceid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_NodeID;
        break;
      }

      // optional uint64 NodeID = 3;
      case 3: {
        if (tag == 24) {
         parse_NodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ProposalID;
        break;
      }

      // optional uint64 ProposalID = 4;
      case 4: {
        if (tag == 32) {
         parse_ProposalID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proposalid_)));
          set_has_proposalid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ProposalNodeID;
        break;
      }

      // optional uint64 ProposalNodeID = 5;
      case 5: {
        if (tag == 40) {
         parse_ProposalNodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proposalnodeid_)));
          set_has_proposalnodeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Value;
        break;
      }

      // optional bytes Value = 6;
      case 6: {
        if (tag == 50) {
         parse_Value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_PreAcceptID;
        break;
      }

      // optional uint64 PreAcceptID = 7;
      case 7: {
        if (tag == 56) {
         parse_PreAcceptID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &preacceptid_)));
          set_has_preacceptid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_PreAcceptNodeID;
        break;
      }

      // optional uint64 PreAcceptNodeID = 8;
      case 8: {
        if (tag == 64) {
         parse_PreAcceptNodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &preacceptnodeid_)));
          set_has_preacceptnodeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_RejectByPromiseID;
        break;
      }

      // optional uint64 RejectByPromiseID = 9;
      case 9: {
        if (tag == 72) {
         parse_RejectByPromiseID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rejectbypromiseid_)));
          set_has_rejectbypromiseid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_NowInstanceID;
        break;
      }

      // optional uint64 NowInstanceID = 10;
      case 10: {
        if (tag == 80) {
         parse_NowInstanceID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nowinstanceid_)));
          set_has_nowinstanceid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_MinChosenInstanceID;
        break;
      }

      // optional uint64 MinChosenInstanceID = 11;
      case 11: {
        if (tag == 88) {
         parse_MinChosenInstanceID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &minchoseninstanceid_)));
          set_has_minchoseninstanceid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_LastChecksum;
        break;
      }

      // optional uint32 LastChecksum = 12;
      case 12: {
        if (tag == 96) {
         parse_LastChecksum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lastchecksum_)));
          set_has_lastchecksum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_Flag;
        break;
      }

      // optional uint32 Flag = 13;
      case 13: {
        if (tag == 104) {
         parse_Flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_SystemVariables;
        break;
      }

      // optional bytes SystemVariables = 14;
      case 14: {
        if (tag == 114) {
         parse_SystemVariables:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_systemvariables()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_MasterVariables;
        break;
      }

      // optional bytes MasterVariables = 15;
      case 15: {
        if (tag == 122) {
         parse_MasterVariables:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mastervariables()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.PaxosMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.PaxosMsg)
  return false;
#undef DO_
}

void PaxosMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.PaxosMsg)
  // required int32 MsgType = 1;
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msgtype(), output);
  }

  // optional uint64 InstanceID = 2;
  if (has_instanceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->instanceid(), output);
  }

  // optional uint64 NodeID = 3;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->nodeid(), output);
  }

  // optional uint64 ProposalID = 4;
  if (has_proposalid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->proposalid(), output);
  }

  // optional uint64 ProposalNodeID = 5;
  if (has_proposalnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->proposalnodeid(), output);
  }

  // optional bytes Value = 6;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->value(), output);
  }

  // optional uint64 PreAcceptID = 7;
  if (has_preacceptid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->preacceptid(), output);
  }

  // optional uint64 PreAcceptNodeID = 8;
  if (has_preacceptnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->preacceptnodeid(), output);
  }

  // optional uint64 RejectByPromiseID = 9;
  if (has_rejectbypromiseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->rejectbypromiseid(), output);
  }

  // optional uint64 NowInstanceID = 10;
  if (has_nowinstanceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->nowinstanceid(), output);
  }

  // optional uint64 MinChosenInstanceID = 11;
  if (has_minchoseninstanceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->minchoseninstanceid(), output);
  }

  // optional uint32 LastChecksum = 12;
  if (has_lastchecksum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->lastchecksum(), output);
  }

  // optional uint32 Flag = 13;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->flag(), output);
  }

  // optional bytes SystemVariables = 14;
  if (has_systemvariables()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->systemvariables(), output);
  }

  // optional bytes MasterVariables = 15;
  if (has_mastervariables()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->mastervariables(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.PaxosMsg)
}

::google::protobuf::uint8* PaxosMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.PaxosMsg)
  // required int32 MsgType = 1;
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msgtype(), target);
  }

  // optional uint64 InstanceID = 2;
  if (has_instanceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->instanceid(), target);
  }

  // optional uint64 NodeID = 3;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->nodeid(), target);
  }

  // optional uint64 ProposalID = 4;
  if (has_proposalid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->proposalid(), target);
  }

  // optional uint64 ProposalNodeID = 5;
  if (has_proposalnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->proposalnodeid(), target);
  }

  // optional bytes Value = 6;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->value(), target);
  }

  // optional uint64 PreAcceptID = 7;
  if (has_preacceptid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->preacceptid(), target);
  }

  // optional uint64 PreAcceptNodeID = 8;
  if (has_preacceptnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->preacceptnodeid(), target);
  }

  // optional uint64 RejectByPromiseID = 9;
  if (has_rejectbypromiseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->rejectbypromiseid(), target);
  }

  // optional uint64 NowInstanceID = 10;
  if (has_nowinstanceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->nowinstanceid(), target);
  }

  // optional uint64 MinChosenInstanceID = 11;
  if (has_minchoseninstanceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->minchoseninstanceid(), target);
  }

  // optional uint32 LastChecksum = 12;
  if (has_lastchecksum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->lastchecksum(), target);
  }

  // optional uint32 Flag = 13;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->flag(), target);
  }

  // optional bytes SystemVariables = 14;
  if (has_systemvariables()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->systemvariables(), target);
  }

  // optional bytes MasterVariables = 15;
  if (has_mastervariables()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->mastervariables(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.PaxosMsg)
  return target;
}

int PaxosMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.PaxosMsg)
  int total_size = 0;

  // required int32 MsgType = 1;
  if (has_msgtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());
  }
  if (_has_bits_[1 / 32] & 254u) {
    // optional uint64 InstanceID = 2;
    if (has_instanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->instanceid());
    }

    // optional uint64 NodeID = 3;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->nodeid());
    }

    // optional uint64 ProposalID = 4;
    if (has_proposalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proposalid());
    }

    // optional uint64 ProposalNodeID = 5;
    if (has_proposalnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proposalnodeid());
    }

    // optional bytes Value = 6;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

    // optional uint64 PreAcceptID = 7;
    if (has_preacceptid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->preacceptid());
    }

    // optional uint64 PreAcceptNodeID = 8;
    if (has_preacceptnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->preacceptnodeid());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional uint64 RejectByPromiseID = 9;
    if (has_rejectbypromiseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rejectbypromiseid());
    }

    // optional uint64 NowInstanceID = 10;
    if (has_nowinstanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->nowinstanceid());
    }

    // optional uint64 MinChosenInstanceID = 11;
    if (has_minchoseninstanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->minchoseninstanceid());
    }

    // optional uint32 LastChecksum = 12;
    if (has_lastchecksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lastchecksum());
    }

    // optional uint32 Flag = 13;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flag());
    }

    // optional bytes SystemVariables = 14;
    if (has_systemvariables()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->systemvariables());
    }

    // optional bytes MasterVariables = 15;
    if (has_mastervariables()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mastervariables());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaxosMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.PaxosMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PaxosMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PaxosMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.PaxosMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.PaxosMsg)
    MergeFrom(*source);
  }
}

void PaxosMsg::MergeFrom(const PaxosMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.PaxosMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_instanceid()) {
      set_instanceid(from.instanceid());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_proposalid()) {
      set_proposalid(from.proposalid());
    }
    if (from.has_proposalnodeid()) {
      set_proposalnodeid(from.proposalnodeid());
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (from.has_preacceptid()) {
      set_preacceptid(from.preacceptid());
    }
    if (from.has_preacceptnodeid()) {
      set_preacceptnodeid(from.preacceptnodeid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_rejectbypromiseid()) {
      set_rejectbypromiseid(from.rejectbypromiseid());
    }
    if (from.has_nowinstanceid()) {
      set_nowinstanceid(from.nowinstanceid());
    }
    if (from.has_minchoseninstanceid()) {
      set_minchoseninstanceid(from.minchoseninstanceid());
    }
    if (from.has_lastchecksum()) {
      set_lastchecksum(from.lastchecksum());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_systemvariables()) {
      set_has_systemvariables();
      systemvariables_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.systemvariables_);
    }
    if (from.has_mastervariables()) {
      set_has_mastervariables();
      mastervariables_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mastervariables_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PaxosMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.PaxosMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaxosMsg::CopyFrom(const PaxosMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.PaxosMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaxosMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PaxosMsg::Swap(PaxosMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaxosMsg::InternalSwap(PaxosMsg* other) {
  std::swap(msgtype_, other->msgtype_);
  std::swap(instanceid_, other->instanceid_);
  std::swap(nodeid_, other->nodeid_);
  std::swap(proposalid_, other->proposalid_);
  std::swap(proposalnodeid_, other->proposalnodeid_);
  value_.Swap(&other->value_);
  std::swap(preacceptid_, other->preacceptid_);
  std::swap(preacceptnodeid_, other->preacceptnodeid_);
  std::swap(rejectbypromiseid_, other->rejectbypromiseid_);
  std::swap(nowinstanceid_, other->nowinstanceid_);
  std::swap(minchoseninstanceid_, other->minchoseninstanceid_);
  std::swap(lastchecksum_, other->lastchecksum_);
  std::swap(flag_, other->flag_);
  systemvariables_.Swap(&other->systemvariables_);
  mastervariables_.Swap(&other->mastervariables_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaxosMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PaxosMsg_descriptor_;
  metadata.reflection = PaxosMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PaxosMsg

// required int32 MsgType = 1;
bool PaxosMsg::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PaxosMsg::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
void PaxosMsg::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void PaxosMsg::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
 ::google::protobuf::int32 PaxosMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.MsgType)
  return msgtype_;
}
 void PaxosMsg::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.MsgType)
}

// optional uint64 InstanceID = 2;
bool PaxosMsg::has_instanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PaxosMsg::set_has_instanceid() {
  _has_bits_[0] |= 0x00000002u;
}
void PaxosMsg::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
void PaxosMsg::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
 ::google::protobuf::uint64 PaxosMsg::instanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.InstanceID)
  return instanceid_;
}
 void PaxosMsg::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.InstanceID)
}

// optional uint64 NodeID = 3;
bool PaxosMsg::has_nodeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PaxosMsg::set_has_nodeid() {
  _has_bits_[0] |= 0x00000004u;
}
void PaxosMsg::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000004u;
}
void PaxosMsg::clear_nodeid() {
  nodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_nodeid();
}
 ::google::protobuf::uint64 PaxosMsg::nodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.NodeID)
  return nodeid_;
}
 void PaxosMsg::set_nodeid(::google::protobuf::uint64 value) {
  set_has_nodeid();
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.NodeID)
}

// optional uint64 ProposalID = 4;
bool PaxosMsg::has_proposalid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PaxosMsg::set_has_proposalid() {
  _has_bits_[0] |= 0x00000008u;
}
void PaxosMsg::clear_has_proposalid() {
  _has_bits_[0] &= ~0x00000008u;
}
void PaxosMsg::clear_proposalid() {
  proposalid_ = GOOGLE_ULONGLONG(0);
  clear_has_proposalid();
}
 ::google::protobuf::uint64 PaxosMsg::proposalid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.ProposalID)
  return proposalid_;
}
 void PaxosMsg::set_proposalid(::google::protobuf::uint64 value) {
  set_has_proposalid();
  proposalid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.ProposalID)
}

// optional uint64 ProposalNodeID = 5;
bool PaxosMsg::has_proposalnodeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PaxosMsg::set_has_proposalnodeid() {
  _has_bits_[0] |= 0x00000010u;
}
void PaxosMsg::clear_has_proposalnodeid() {
  _has_bits_[0] &= ~0x00000010u;
}
void PaxosMsg::clear_proposalnodeid() {
  proposalnodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_proposalnodeid();
}
 ::google::protobuf::uint64 PaxosMsg::proposalnodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.ProposalNodeID)
  return proposalnodeid_;
}
 void PaxosMsg::set_proposalnodeid(::google::protobuf::uint64 value) {
  set_has_proposalnodeid();
  proposalnodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.ProposalNodeID)
}

// optional bytes Value = 6;
bool PaxosMsg::has_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PaxosMsg::set_has_value() {
  _has_bits_[0] |= 0x00000020u;
}
void PaxosMsg::clear_has_value() {
  _has_bits_[0] &= ~0x00000020u;
}
void PaxosMsg::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& PaxosMsg::value() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.Value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PaxosMsg::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.Value)
}
 void PaxosMsg::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.PaxosMsg.Value)
}
 void PaxosMsg::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.PaxosMsg.Value)
}
 ::std::string* PaxosMsg::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:phxpaxos.PaxosMsg.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PaxosMsg::release_value() {
  // @@protoc_insertion_point(field_release:phxpaxos.PaxosMsg.Value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PaxosMsg::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.PaxosMsg.Value)
}

// optional uint64 PreAcceptID = 7;
bool PaxosMsg::has_preacceptid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PaxosMsg::set_has_preacceptid() {
  _has_bits_[0] |= 0x00000040u;
}
void PaxosMsg::clear_has_preacceptid() {
  _has_bits_[0] &= ~0x00000040u;
}
void PaxosMsg::clear_preacceptid() {
  preacceptid_ = GOOGLE_ULONGLONG(0);
  clear_has_preacceptid();
}
 ::google::protobuf::uint64 PaxosMsg::preacceptid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.PreAcceptID)
  return preacceptid_;
}
 void PaxosMsg::set_preacceptid(::google::protobuf::uint64 value) {
  set_has_preacceptid();
  preacceptid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.PreAcceptID)
}

// optional uint64 PreAcceptNodeID = 8;
bool PaxosMsg::has_preacceptnodeid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PaxosMsg::set_has_preacceptnodeid() {
  _has_bits_[0] |= 0x00000080u;
}
void PaxosMsg::clear_has_preacceptnodeid() {
  _has_bits_[0] &= ~0x00000080u;
}
void PaxosMsg::clear_preacceptnodeid() {
  preacceptnodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_preacceptnodeid();
}
 ::google::protobuf::uint64 PaxosMsg::preacceptnodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.PreAcceptNodeID)
  return preacceptnodeid_;
}
 void PaxosMsg::set_preacceptnodeid(::google::protobuf::uint64 value) {
  set_has_preacceptnodeid();
  preacceptnodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.PreAcceptNodeID)
}

// optional uint64 RejectByPromiseID = 9;
bool PaxosMsg::has_rejectbypromiseid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PaxosMsg::set_has_rejectbypromiseid() {
  _has_bits_[0] |= 0x00000100u;
}
void PaxosMsg::clear_has_rejectbypromiseid() {
  _has_bits_[0] &= ~0x00000100u;
}
void PaxosMsg::clear_rejectbypromiseid() {
  rejectbypromiseid_ = GOOGLE_ULONGLONG(0);
  clear_has_rejectbypromiseid();
}
 ::google::protobuf::uint64 PaxosMsg::rejectbypromiseid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.RejectByPromiseID)
  return rejectbypromiseid_;
}
 void PaxosMsg::set_rejectbypromiseid(::google::protobuf::uint64 value) {
  set_has_rejectbypromiseid();
  rejectbypromiseid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.RejectByPromiseID)
}

// optional uint64 NowInstanceID = 10;
bool PaxosMsg::has_nowinstanceid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PaxosMsg::set_has_nowinstanceid() {
  _has_bits_[0] |= 0x00000200u;
}
void PaxosMsg::clear_has_nowinstanceid() {
  _has_bits_[0] &= ~0x00000200u;
}
void PaxosMsg::clear_nowinstanceid() {
  nowinstanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_nowinstanceid();
}
 ::google::protobuf::uint64 PaxosMsg::nowinstanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.NowInstanceID)
  return nowinstanceid_;
}
 void PaxosMsg::set_nowinstanceid(::google::protobuf::uint64 value) {
  set_has_nowinstanceid();
  nowinstanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.NowInstanceID)
}

// optional uint64 MinChosenInstanceID = 11;
bool PaxosMsg::has_minchoseninstanceid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void PaxosMsg::set_has_minchoseninstanceid() {
  _has_bits_[0] |= 0x00000400u;
}
void PaxosMsg::clear_has_minchoseninstanceid() {
  _has_bits_[0] &= ~0x00000400u;
}
void PaxosMsg::clear_minchoseninstanceid() {
  minchoseninstanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_minchoseninstanceid();
}
 ::google::protobuf::uint64 PaxosMsg::minchoseninstanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.MinChosenInstanceID)
  return minchoseninstanceid_;
}
 void PaxosMsg::set_minchoseninstanceid(::google::protobuf::uint64 value) {
  set_has_minchoseninstanceid();
  minchoseninstanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.MinChosenInstanceID)
}

// optional uint32 LastChecksum = 12;
bool PaxosMsg::has_lastchecksum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void PaxosMsg::set_has_lastchecksum() {
  _has_bits_[0] |= 0x00000800u;
}
void PaxosMsg::clear_has_lastchecksum() {
  _has_bits_[0] &= ~0x00000800u;
}
void PaxosMsg::clear_lastchecksum() {
  lastchecksum_ = 0u;
  clear_has_lastchecksum();
}
 ::google::protobuf::uint32 PaxosMsg::lastchecksum() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.LastChecksum)
  return lastchecksum_;
}
 void PaxosMsg::set_lastchecksum(::google::protobuf::uint32 value) {
  set_has_lastchecksum();
  lastchecksum_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.LastChecksum)
}

// optional uint32 Flag = 13;
bool PaxosMsg::has_flag() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void PaxosMsg::set_has_flag() {
  _has_bits_[0] |= 0x00001000u;
}
void PaxosMsg::clear_has_flag() {
  _has_bits_[0] &= ~0x00001000u;
}
void PaxosMsg::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
 ::google::protobuf::uint32 PaxosMsg::flag() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.Flag)
  return flag_;
}
 void PaxosMsg::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.Flag)
}

// optional bytes SystemVariables = 14;
bool PaxosMsg::has_systemvariables() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void PaxosMsg::set_has_systemvariables() {
  _has_bits_[0] |= 0x00002000u;
}
void PaxosMsg::clear_has_systemvariables() {
  _has_bits_[0] &= ~0x00002000u;
}
void PaxosMsg::clear_systemvariables() {
  systemvariables_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_systemvariables();
}
 const ::std::string& PaxosMsg::systemvariables() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.SystemVariables)
  return systemvariables_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PaxosMsg::set_systemvariables(const ::std::string& value) {
  set_has_systemvariables();
  systemvariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.SystemVariables)
}
 void PaxosMsg::set_systemvariables(const char* value) {
  set_has_systemvariables();
  systemvariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.PaxosMsg.SystemVariables)
}
 void PaxosMsg::set_systemvariables(const void* value, size_t size) {
  set_has_systemvariables();
  systemvariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.PaxosMsg.SystemVariables)
}
 ::std::string* PaxosMsg::mutable_systemvariables() {
  set_has_systemvariables();
  // @@protoc_insertion_point(field_mutable:phxpaxos.PaxosMsg.SystemVariables)
  return systemvariables_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PaxosMsg::release_systemvariables() {
  // @@protoc_insertion_point(field_release:phxpaxos.PaxosMsg.SystemVariables)
  clear_has_systemvariables();
  return systemvariables_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PaxosMsg::set_allocated_systemvariables(::std::string* systemvariables) {
  if (systemvariables != NULL) {
    set_has_systemvariables();
  } else {
    clear_has_systemvariables();
  }
  systemvariables_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), systemvariables);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.PaxosMsg.SystemVariables)
}

// optional bytes MasterVariables = 15;
bool PaxosMsg::has_mastervariables() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void PaxosMsg::set_has_mastervariables() {
  _has_bits_[0] |= 0x00004000u;
}
void PaxosMsg::clear_has_mastervariables() {
  _has_bits_[0] &= ~0x00004000u;
}
void PaxosMsg::clear_mastervariables() {
  mastervariables_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mastervariables();
}
 const ::std::string& PaxosMsg::mastervariables() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.MasterVariables)
  return mastervariables_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PaxosMsg::set_mastervariables(const ::std::string& value) {
  set_has_mastervariables();
  mastervariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.MasterVariables)
}
 void PaxosMsg::set_mastervariables(const char* value) {
  set_has_mastervariables();
  mastervariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.PaxosMsg.MasterVariables)
}
 void PaxosMsg::set_mastervariables(const void* value, size_t size) {
  set_has_mastervariables();
  mastervariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.PaxosMsg.MasterVariables)
}
 ::std::string* PaxosMsg::mutable_mastervariables() {
  set_has_mastervariables();
  // @@protoc_insertion_point(field_mutable:phxpaxos.PaxosMsg.MasterVariables)
  return mastervariables_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PaxosMsg::release_mastervariables() {
  // @@protoc_insertion_point(field_release:phxpaxos.PaxosMsg.MasterVariables)
  clear_has_mastervariables();
  return mastervariables_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PaxosMsg::set_allocated_mastervariables(::std::string* mastervariables) {
  if (mastervariables != NULL) {
    set_has_mastervariables();
  } else {
    clear_has_mastervariables();
  }
  mastervariables_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mastervariables);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.PaxosMsg.MasterVariables)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckpointMsg::kMsgTypeFieldNumber;
const int CheckpointMsg::kNodeIDFieldNumber;
const int CheckpointMsg::kFlagFieldNumber;
const int CheckpointMsg::kUUIDFieldNumber;
const int CheckpointMsg::kSequenceFieldNumber;
const int CheckpointMsg::kCheckpointInstanceIDFieldNumber;
const int CheckpointMsg::kChecksumFieldNumber;
const int CheckpointMsg::kFilePathFieldNumber;
const int CheckpointMsg::kSMIDFieldNumber;
const int CheckpointMsg::kOffsetFieldNumber;
const int CheckpointMsg::kBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckpointMsg::CheckpointMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.CheckpointMsg)
}

void CheckpointMsg::InitAsDefaultInstance() {
}

CheckpointMsg::CheckpointMsg(const CheckpointMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phxpaxos.CheckpointMsg)
}

void CheckpointMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgtype_ = 0;
  nodeid_ = GOOGLE_ULONGLONG(0);
  flag_ = 0;
  uuid_ = GOOGLE_ULONGLONG(0);
  sequence_ = GOOGLE_ULONGLONG(0);
  checkpointinstanceid_ = GOOGLE_ULONGLONG(0);
  checksum_ = 0u;
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smid_ = 0;
  offset_ = GOOGLE_ULONGLONG(0);
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CheckpointMsg::~CheckpointMsg() {
  // @@protoc_insertion_point(destructor:phxpaxos.CheckpointMsg)
  SharedDtor();
}

void CheckpointMsg::SharedDtor() {
  filepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CheckpointMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckpointMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckpointMsg_descriptor_;
}

const CheckpointMsg& CheckpointMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_paxos_5fmsg_2eproto();
  return *default_instance_;
}

CheckpointMsg* CheckpointMsg::default_instance_ = NULL;

CheckpointMsg* CheckpointMsg::New(::google::protobuf::Arena* arena) const {
  CheckpointMsg* n = new CheckpointMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckpointMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.CheckpointMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CheckpointMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CheckpointMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(nodeid_, checkpointinstanceid_);
    checksum_ = 0u;
    if (has_filepath()) {
      filepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 1792u) {
    ZR_(smid_, offset_);
    if (has_buffer()) {
      buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CheckpointMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.CheckpointMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 MsgType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgtype_)));
          set_has_msgtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_NodeID;
        break;
      }

      // required uint64 NodeID = 2;
      case 2: {
        if (tag == 16) {
         parse_NodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Flag;
        break;
      }

      // optional int32 Flag = 3;
      case 3: {
        if (tag == 24) {
         parse_Flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_UUID;
        break;
      }

      // required uint64 UUID = 4;
      case 4: {
        if (tag == 32) {
         parse_UUID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Sequence;
        break;
      }

      // required uint64 Sequence = 5;
      case 5: {
        if (tag == 40) {
         parse_Sequence:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_)));
          set_has_sequence();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_CheckpointInstanceID;
        break;
      }

      // optional uint64 CheckpointInstanceID = 6;
      case 6: {
        if (tag == 48) {
         parse_CheckpointInstanceID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &checkpointinstanceid_)));
          set_has_checkpointinstanceid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Checksum;
        break;
      }

      // optional uint32 Checksum = 7;
      case 7: {
        if (tag == 56) {
         parse_Checksum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &checksum_)));
          set_has_checksum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_FilePath;
        break;
      }

      // optional string FilePath = 8;
      case 8: {
        if (tag == 66) {
         parse_FilePath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filepath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filepath().data(), this->filepath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "phxpaxos.CheckpointMsg.FilePath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_SMID;
        break;
      }

      // optional int32 SMID = 9;
      case 9: {
        if (tag == 72) {
         parse_SMID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &smid_)));
          set_has_smid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_Offset;
        break;
      }

      // optional uint64 Offset = 10;
      case 10: {
        if (tag == 80) {
         parse_Offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_Buffer;
        break;
      }

      // optional bytes Buffer = 11;
      case 11: {
        if (tag == 90) {
         parse_Buffer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.CheckpointMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.CheckpointMsg)
  return false;
#undef DO_
}

void CheckpointMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.CheckpointMsg)
  // required int32 MsgType = 1;
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msgtype(), output);
  }

  // required uint64 NodeID = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nodeid(), output);
  }

  // optional int32 Flag = 3;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->flag(), output);
  }

  // required uint64 UUID = 4;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->uuid(), output);
  }

  // required uint64 Sequence = 5;
  if (has_sequence()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->sequence(), output);
  }

  // optional uint64 CheckpointInstanceID = 6;
  if (has_checkpointinstanceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->checkpointinstanceid(), output);
  }

  // optional uint32 Checksum = 7;
  if (has_checksum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->checksum(), output);
  }

  // optional string FilePath = 8;
  if (has_filepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filepath().data(), this->filepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "phxpaxos.CheckpointMsg.FilePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->filepath(), output);
  }

  // optional int32 SMID = 9;
  if (has_smid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->smid(), output);
  }

  // optional uint64 Offset = 10;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->offset(), output);
  }

  // optional bytes Buffer = 11;
  if (has_buffer()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->buffer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.CheckpointMsg)
}

::google::protobuf::uint8* CheckpointMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.CheckpointMsg)
  // required int32 MsgType = 1;
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msgtype(), target);
  }

  // required uint64 NodeID = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->nodeid(), target);
  }

  // optional int32 Flag = 3;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->flag(), target);
  }

  // required uint64 UUID = 4;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->uuid(), target);
  }

  // required uint64 Sequence = 5;
  if (has_sequence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->sequence(), target);
  }

  // optional uint64 CheckpointInstanceID = 6;
  if (has_checkpointinstanceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->checkpointinstanceid(), target);
  }

  // optional uint32 Checksum = 7;
  if (has_checksum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->checksum(), target);
  }

  // optional string FilePath = 8;
  if (has_filepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filepath().data(), this->filepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "phxpaxos.CheckpointMsg.FilePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->filepath(), target);
  }

  // optional int32 SMID = 9;
  if (has_smid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->smid(), target);
  }

  // optional uint64 Offset = 10;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->offset(), target);
  }

  // optional bytes Buffer = 11;
  if (has_buffer()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->buffer(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.CheckpointMsg)
  return target;
}

int CheckpointMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.CheckpointMsg)
  int total_size = 0;

  if (has_msgtype()) {
    // required int32 MsgType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());
  }

  if (has_nodeid()) {
    // required uint64 NodeID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nodeid());
  }

  if (has_uuid()) {
    // required uint64 UUID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uuid());
  }

  if (has_sequence()) {
    // required uint64 Sequence = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence());
  }

  return total_size;
}
int CheckpointMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.CheckpointMsg)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001b) ^ 0x0000001b) == 0) {  // All required fields are present.
    // required int32 MsgType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());

    // required uint64 NodeID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nodeid());

    // required uint64 UUID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uuid());

    // required uint64 Sequence = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 228u) {
    // optional int32 Flag = 3;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }

    // optional uint64 CheckpointInstanceID = 6;
    if (has_checkpointinstanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->checkpointinstanceid());
    }

    // optional uint32 Checksum = 7;
    if (has_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->checksum());
    }

    // optional string FilePath = 8;
    if (has_filepath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filepath());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional int32 SMID = 9;
    if (has_smid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->smid());
    }

    // optional uint64 Offset = 10;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

    // optional bytes Buffer = 11;
    if (has_buffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->buffer());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckpointMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.CheckpointMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CheckpointMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckpointMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.CheckpointMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.CheckpointMsg)
    MergeFrom(*source);
  }
}

void CheckpointMsg::MergeFrom(const CheckpointMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.CheckpointMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_sequence()) {
      set_sequence(from.sequence());
    }
    if (from.has_checkpointinstanceid()) {
      set_checkpointinstanceid(from.checkpointinstanceid());
    }
    if (from.has_checksum()) {
      set_checksum(from.checksum());
    }
    if (from.has_filepath()) {
      set_has_filepath();
      filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_smid()) {
      set_smid(from.smid());
    }
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_buffer()) {
      set_has_buffer();
      buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CheckpointMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.CheckpointMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckpointMsg::CopyFrom(const CheckpointMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.CheckpointMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckpointMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001b) != 0x0000001b) return false;

  return true;
}

void CheckpointMsg::Swap(CheckpointMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckpointMsg::InternalSwap(CheckpointMsg* other) {
  std::swap(msgtype_, other->msgtype_);
  std::swap(nodeid_, other->nodeid_);
  std::swap(flag_, other->flag_);
  std::swap(uuid_, other->uuid_);
  std::swap(sequence_, other->sequence_);
  std::swap(checkpointinstanceid_, other->checkpointinstanceid_);
  std::swap(checksum_, other->checksum_);
  filepath_.Swap(&other->filepath_);
  std::swap(smid_, other->smid_);
  std::swap(offset_, other->offset_);
  buffer_.Swap(&other->buffer_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckpointMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CheckpointMsg_descriptor_;
  metadata.reflection = CheckpointMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckpointMsg

// required int32 MsgType = 1;
bool CheckpointMsg::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CheckpointMsg::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
void CheckpointMsg::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void CheckpointMsg::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
 ::google::protobuf::int32 CheckpointMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.MsgType)
  return msgtype_;
}
 void CheckpointMsg::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.MsgType)
}

// required uint64 NodeID = 2;
bool CheckpointMsg::has_nodeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CheckpointMsg::set_has_nodeid() {
  _has_bits_[0] |= 0x00000002u;
}
void CheckpointMsg::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CheckpointMsg::clear_nodeid() {
  nodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_nodeid();
}
 ::google::protobuf::uint64 CheckpointMsg::nodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.NodeID)
  return nodeid_;
}
 void CheckpointMsg::set_nodeid(::google::protobuf::uint64 value) {
  set_has_nodeid();
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.NodeID)
}

// optional int32 Flag = 3;
bool CheckpointMsg::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CheckpointMsg::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
void CheckpointMsg::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
void CheckpointMsg::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
 ::google::protobuf::int32 CheckpointMsg::flag() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Flag)
  return flag_;
}
 void CheckpointMsg::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Flag)
}

// required uint64 UUID = 4;
bool CheckpointMsg::has_uuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CheckpointMsg::set_has_uuid() {
  _has_bits_[0] |= 0x00000008u;
}
void CheckpointMsg::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000008u;
}
void CheckpointMsg::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
 ::google::protobuf::uint64 CheckpointMsg::uuid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.UUID)
  return uuid_;
}
 void CheckpointMsg::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.UUID)
}

// required uint64 Sequence = 5;
bool CheckpointMsg::has_sequence() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CheckpointMsg::set_has_sequence() {
  _has_bits_[0] |= 0x00000010u;
}
void CheckpointMsg::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000010u;
}
void CheckpointMsg::clear_sequence() {
  sequence_ = GOOGLE_ULONGLONG(0);
  clear_has_sequence();
}
 ::google::protobuf::uint64 CheckpointMsg::sequence() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Sequence)
  return sequence_;
}
 void CheckpointMsg::set_sequence(::google::protobuf::uint64 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Sequence)
}

// optional uint64 CheckpointInstanceID = 6;
bool CheckpointMsg::has_checkpointinstanceid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CheckpointMsg::set_has_checkpointinstanceid() {
  _has_bits_[0] |= 0x00000020u;
}
void CheckpointMsg::clear_has_checkpointinstanceid() {
  _has_bits_[0] &= ~0x00000020u;
}
void CheckpointMsg::clear_checkpointinstanceid() {
  checkpointinstanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_checkpointinstanceid();
}
 ::google::protobuf::uint64 CheckpointMsg::checkpointinstanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.CheckpointInstanceID)
  return checkpointinstanceid_;
}
 void CheckpointMsg::set_checkpointinstanceid(::google::protobuf::uint64 value) {
  set_has_checkpointinstanceid();
  checkpointinstanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.CheckpointInstanceID)
}

// optional uint32 Checksum = 7;
bool CheckpointMsg::has_checksum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CheckpointMsg::set_has_checksum() {
  _has_bits_[0] |= 0x00000040u;
}
void CheckpointMsg::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000040u;
}
void CheckpointMsg::clear_checksum() {
  checksum_ = 0u;
  clear_has_checksum();
}
 ::google::protobuf::uint32 CheckpointMsg::checksum() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Checksum)
  return checksum_;
}
 void CheckpointMsg::set_checksum(::google::protobuf::uint32 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Checksum)
}

// optional string FilePath = 8;
bool CheckpointMsg::has_filepath() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CheckpointMsg::set_has_filepath() {
  _has_bits_[0] |= 0x00000080u;
}
void CheckpointMsg::clear_has_filepath() {
  _has_bits_[0] &= ~0x00000080u;
}
void CheckpointMsg::clear_filepath() {
  filepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filepath();
}
 const ::std::string& CheckpointMsg::filepath() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.FilePath)
  return filepath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CheckpointMsg::set_filepath(const ::std::string& value) {
  set_has_filepath();
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.FilePath)
}
 void CheckpointMsg::set_filepath(const char* value) {
  set_has_filepath();
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.CheckpointMsg.FilePath)
}
 void CheckpointMsg::set_filepath(const char* value, size_t size) {
  set_has_filepath();
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.CheckpointMsg.FilePath)
}
 ::std::string* CheckpointMsg::mutable_filepath() {
  set_has_filepath();
  // @@protoc_insertion_point(field_mutable:phxpaxos.CheckpointMsg.FilePath)
  return filepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CheckpointMsg::release_filepath() {
  // @@protoc_insertion_point(field_release:phxpaxos.CheckpointMsg.FilePath)
  clear_has_filepath();
  return filepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CheckpointMsg::set_allocated_filepath(::std::string* filepath) {
  if (filepath != NULL) {
    set_has_filepath();
  } else {
    clear_has_filepath();
  }
  filepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filepath);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.CheckpointMsg.FilePath)
}

// optional int32 SMID = 9;
bool CheckpointMsg::has_smid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CheckpointMsg::set_has_smid() {
  _has_bits_[0] |= 0x00000100u;
}
void CheckpointMsg::clear_has_smid() {
  _has_bits_[0] &= ~0x00000100u;
}
void CheckpointMsg::clear_smid() {
  smid_ = 0;
  clear_has_smid();
}
 ::google::protobuf::int32 CheckpointMsg::smid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.SMID)
  return smid_;
}
 void CheckpointMsg::set_smid(::google::protobuf::int32 value) {
  set_has_smid();
  smid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.SMID)
}

// optional uint64 Offset = 10;
bool CheckpointMsg::has_offset() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CheckpointMsg::set_has_offset() {
  _has_bits_[0] |= 0x00000200u;
}
void CheckpointMsg::clear_has_offset() {
  _has_bits_[0] &= ~0x00000200u;
}
void CheckpointMsg::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
 ::google::protobuf::uint64 CheckpointMsg::offset() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Offset)
  return offset_;
}
 void CheckpointMsg::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Offset)
}

// optional bytes Buffer = 11;
bool CheckpointMsg::has_buffer() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CheckpointMsg::set_has_buffer() {
  _has_bits_[0] |= 0x00000400u;
}
void CheckpointMsg::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000400u;
}
void CheckpointMsg::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buffer();
}
 const ::std::string& CheckpointMsg::buffer() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Buffer)
  return buffer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CheckpointMsg::set_buffer(const ::std::string& value) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Buffer)
}
 void CheckpointMsg::set_buffer(const char* value) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.CheckpointMsg.Buffer)
}
 void CheckpointMsg::set_buffer(const void* value, size_t size) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.CheckpointMsg.Buffer)
}
 ::std::string* CheckpointMsg::mutable_buffer() {
  set_has_buffer();
  // @@protoc_insertion_point(field_mutable:phxpaxos.CheckpointMsg.Buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CheckpointMsg::release_buffer() {
  // @@protoc_insertion_point(field_release:phxpaxos.CheckpointMsg.Buffer)
  clear_has_buffer();
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CheckpointMsg::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.CheckpointMsg.Buffer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AcceptorStateData::kInstanceIDFieldNumber;
const int AcceptorStateData::kPromiseIDFieldNumber;
const int AcceptorStateData::kPromiseNodeIDFieldNumber;
const int AcceptorStateData::kAcceptedIDFieldNumber;
const int AcceptorStateData::kAcceptedNodeIDFieldNumber;
const int AcceptorStateData::kAcceptedValueFieldNumber;
const int AcceptorStateData::kChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AcceptorStateData::AcceptorStateData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.AcceptorStateData)
}

void AcceptorStateData::InitAsDefaultInstance() {
}

AcceptorStateData::AcceptorStateData(const AcceptorStateData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phxpaxos.AcceptorStateData)
}

void AcceptorStateData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  instanceid_ = GOOGLE_ULONGLONG(0);
  promiseid_ = GOOGLE_ULONGLONG(0);
  promisenodeid_ = GOOGLE_ULONGLONG(0);
  acceptedid_ = GOOGLE_ULONGLONG(0);
  acceptednodeid_ = GOOGLE_ULONGLONG(0);
  acceptedvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AcceptorStateData::~AcceptorStateData() {
  // @@protoc_insertion_point(destructor:phxpaxos.AcceptorStateData)
  SharedDtor();
}

void AcceptorStateData::SharedDtor() {
  acceptedvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AcceptorStateData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptorStateData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AcceptorStateData_descriptor_;
}

const AcceptorStateData& AcceptorStateData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_paxos_5fmsg_2eproto();
  return *default_instance_;
}

AcceptorStateData* AcceptorStateData::default_instance_ = NULL;

AcceptorStateData* AcceptorStateData::New(::google::protobuf::Arena* arena) const {
  AcceptorStateData* n = new AcceptorStateData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AcceptorStateData::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.AcceptorStateData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AcceptorStateData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AcceptorStateData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(instanceid_, acceptednodeid_);
    if (has_acceptedvalue()) {
      acceptedvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    checksum_ = 0u;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AcceptorStateData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.AcceptorStateData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 InstanceID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instanceid_)));
          set_has_instanceid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PromiseID;
        break;
      }

      // required uint64 PromiseID = 2;
      case 2: {
        if (tag == 16) {
         parse_PromiseID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &promiseid_)));
          set_has_promiseid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PromiseNodeID;
        break;
      }

      // required uint64 PromiseNodeID = 3;
      case 3: {
        if (tag == 24) {
         parse_PromiseNodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &promisenodeid_)));
          set_has_promisenodeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_AcceptedID;
        break;
      }

      // required uint64 AcceptedID = 4;
      case 4: {
        if (tag == 32) {
         parse_AcceptedID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &acceptedid_)));
          set_has_acceptedid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_AcceptedNodeID;
        break;
      }

      // required uint64 AcceptedNodeID = 5;
      case 5: {
        if (tag == 40) {
         parse_AcceptedNodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &acceptednodeid_)));
          set_has_acceptednodeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_AcceptedValue;
        break;
      }

      // required bytes AcceptedValue = 6;
      case 6: {
        if (tag == 50) {
         parse_AcceptedValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_acceptedvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Checksum;
        break;
      }

      // required uint32 Checksum = 7;
      case 7: {
        if (tag == 56) {
         parse_Checksum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &checksum_)));
          set_has_checksum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.AcceptorStateData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.AcceptorStateData)
  return false;
#undef DO_
}

void AcceptorStateData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.AcceptorStateData)
  // required uint64 InstanceID = 1;
  if (has_instanceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->instanceid(), output);
  }

  // required uint64 PromiseID = 2;
  if (has_promiseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->promiseid(), output);
  }

  // required uint64 PromiseNodeID = 3;
  if (has_promisenodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->promisenodeid(), output);
  }

  // required uint64 AcceptedID = 4;
  if (has_acceptedid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->acceptedid(), output);
  }

  // required uint64 AcceptedNodeID = 5;
  if (has_acceptednodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->acceptednodeid(), output);
  }

  // required bytes AcceptedValue = 6;
  if (has_acceptedvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->acceptedvalue(), output);
  }

  // required uint32 Checksum = 7;
  if (has_checksum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.AcceptorStateData)
}

::google::protobuf::uint8* AcceptorStateData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.AcceptorStateData)
  // required uint64 InstanceID = 1;
  if (has_instanceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->instanceid(), target);
  }

  // required uint64 PromiseID = 2;
  if (has_promiseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->promiseid(), target);
  }

  // required uint64 PromiseNodeID = 3;
  if (has_promisenodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->promisenodeid(), target);
  }

  // required uint64 AcceptedID = 4;
  if (has_acceptedid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->acceptedid(), target);
  }

  // required uint64 AcceptedNodeID = 5;
  if (has_acceptednodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->acceptednodeid(), target);
  }

  // required bytes AcceptedValue = 6;
  if (has_acceptedvalue()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->acceptedvalue(), target);
  }

  // required uint32 Checksum = 7;
  if (has_checksum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.AcceptorStateData)
  return target;
}

int AcceptorStateData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.AcceptorStateData)
  int total_size = 0;

  if (has_instanceid()) {
    // required uint64 InstanceID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instanceid());
  }

  if (has_promiseid()) {
    // required uint64 PromiseID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promiseid());
  }

  if (has_promisenodeid()) {
    // required uint64 PromiseNodeID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promisenodeid());
  }

  if (has_acceptedid()) {
    // required uint64 AcceptedID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acceptedid());
  }

  if (has_acceptednodeid()) {
    // required uint64 AcceptedNodeID = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acceptednodeid());
  }

  if (has_acceptedvalue()) {
    // required bytes AcceptedValue = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->acceptedvalue());
  }

  if (has_checksum()) {
    // required uint32 Checksum = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->checksum());
  }

  return total_size;
}
int AcceptorStateData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.AcceptorStateData)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required uint64 InstanceID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instanceid());

    // required uint64 PromiseID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promiseid());

    // required uint64 PromiseNodeID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promisenodeid());

    // required uint64 AcceptedID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acceptedid());

    // required uint64 AcceptedNodeID = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acceptednodeid());

    // required bytes AcceptedValue = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->acceptedvalue());

    // required uint32 Checksum = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->checksum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptorStateData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.AcceptorStateData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AcceptorStateData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AcceptorStateData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.AcceptorStateData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.AcceptorStateData)
    MergeFrom(*source);
  }
}

void AcceptorStateData::MergeFrom(const AcceptorStateData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.AcceptorStateData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_instanceid()) {
      set_instanceid(from.instanceid());
    }
    if (from.has_promiseid()) {
      set_promiseid(from.promiseid());
    }
    if (from.has_promisenodeid()) {
      set_promisenodeid(from.promisenodeid());
    }
    if (from.has_acceptedid()) {
      set_acceptedid(from.acceptedid());
    }
    if (from.has_acceptednodeid()) {
      set_acceptednodeid(from.acceptednodeid());
    }
    if (from.has_acceptedvalue()) {
      set_has_acceptedvalue();
      acceptedvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acceptedvalue_);
    }
    if (from.has_checksum()) {
      set_checksum(from.checksum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AcceptorStateData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.AcceptorStateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptorStateData::CopyFrom(const AcceptorStateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.AcceptorStateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptorStateData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void AcceptorStateData::Swap(AcceptorStateData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AcceptorStateData::InternalSwap(AcceptorStateData* other) {
  std::swap(instanceid_, other->instanceid_);
  std::swap(promiseid_, other->promiseid_);
  std::swap(promisenodeid_, other->promisenodeid_);
  std::swap(acceptedid_, other->acceptedid_);
  std::swap(acceptednodeid_, other->acceptednodeid_);
  acceptedvalue_.Swap(&other->acceptedvalue_);
  std::swap(checksum_, other->checksum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AcceptorStateData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AcceptorStateData_descriptor_;
  metadata.reflection = AcceptorStateData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AcceptorStateData

// required uint64 InstanceID = 1;
bool AcceptorStateData::has_instanceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AcceptorStateData::set_has_instanceid() {
  _has_bits_[0] |= 0x00000001u;
}
void AcceptorStateData::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AcceptorStateData::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
 ::google::protobuf::uint64 AcceptorStateData::instanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.InstanceID)
  return instanceid_;
}
 void AcceptorStateData::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.InstanceID)
}

// required uint64 PromiseID = 2;
bool AcceptorStateData::has_promiseid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AcceptorStateData::set_has_promiseid() {
  _has_bits_[0] |= 0x00000002u;
}
void AcceptorStateData::clear_has_promiseid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AcceptorStateData::clear_promiseid() {
  promiseid_ = GOOGLE_ULONGLONG(0);
  clear_has_promiseid();
}
 ::google::protobuf::uint64 AcceptorStateData::promiseid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.PromiseID)
  return promiseid_;
}
 void AcceptorStateData::set_promiseid(::google::protobuf::uint64 value) {
  set_has_promiseid();
  promiseid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.PromiseID)
}

// required uint64 PromiseNodeID = 3;
bool AcceptorStateData::has_promisenodeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AcceptorStateData::set_has_promisenodeid() {
  _has_bits_[0] |= 0x00000004u;
}
void AcceptorStateData::clear_has_promisenodeid() {
  _has_bits_[0] &= ~0x00000004u;
}
void AcceptorStateData::clear_promisenodeid() {
  promisenodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_promisenodeid();
}
 ::google::protobuf::uint64 AcceptorStateData::promisenodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.PromiseNodeID)
  return promisenodeid_;
}
 void AcceptorStateData::set_promisenodeid(::google::protobuf::uint64 value) {
  set_has_promisenodeid();
  promisenodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.PromiseNodeID)
}

// required uint64 AcceptedID = 4;
bool AcceptorStateData::has_acceptedid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AcceptorStateData::set_has_acceptedid() {
  _has_bits_[0] |= 0x00000008u;
}
void AcceptorStateData::clear_has_acceptedid() {
  _has_bits_[0] &= ~0x00000008u;
}
void AcceptorStateData::clear_acceptedid() {
  acceptedid_ = GOOGLE_ULONGLONG(0);
  clear_has_acceptedid();
}
 ::google::protobuf::uint64 AcceptorStateData::acceptedid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.AcceptedID)
  return acceptedid_;
}
 void AcceptorStateData::set_acceptedid(::google::protobuf::uint64 value) {
  set_has_acceptedid();
  acceptedid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.AcceptedID)
}

// required uint64 AcceptedNodeID = 5;
bool AcceptorStateData::has_acceptednodeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AcceptorStateData::set_has_acceptednodeid() {
  _has_bits_[0] |= 0x00000010u;
}
void AcceptorStateData::clear_has_acceptednodeid() {
  _has_bits_[0] &= ~0x00000010u;
}
void AcceptorStateData::clear_acceptednodeid() {
  acceptednodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_acceptednodeid();
}
 ::google::protobuf::uint64 AcceptorStateData::acceptednodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.AcceptedNodeID)
  return acceptednodeid_;
}
 void AcceptorStateData::set_acceptednodeid(::google::protobuf::uint64 value) {
  set_has_acceptednodeid();
  acceptednodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.AcceptedNodeID)
}

// required bytes AcceptedValue = 6;
bool AcceptorStateData::has_acceptedvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AcceptorStateData::set_has_acceptedvalue() {
  _has_bits_[0] |= 0x00000020u;
}
void AcceptorStateData::clear_has_acceptedvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
void AcceptorStateData::clear_acceptedvalue() {
  acceptedvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_acceptedvalue();
}
 const ::std::string& AcceptorStateData::acceptedvalue() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.AcceptedValue)
  return acceptedvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AcceptorStateData::set_acceptedvalue(const ::std::string& value) {
  set_has_acceptedvalue();
  acceptedvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.AcceptedValue)
}
 void AcceptorStateData::set_acceptedvalue(const char* value) {
  set_has_acceptedvalue();
  acceptedvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.AcceptorStateData.AcceptedValue)
}
 void AcceptorStateData::set_acceptedvalue(const void* value, size_t size) {
  set_has_acceptedvalue();
  acceptedvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.AcceptorStateData.AcceptedValue)
}
 ::std::string* AcceptorStateData::mutable_acceptedvalue() {
  set_has_acceptedvalue();
  // @@protoc_insertion_point(field_mutable:phxpaxos.AcceptorStateData.AcceptedValue)
  return acceptedvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AcceptorStateData::release_acceptedvalue() {
  // @@protoc_insertion_point(field_release:phxpaxos.AcceptorStateData.AcceptedValue)
  clear_has_acceptedvalue();
  return acceptedvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AcceptorStateData::set_allocated_acceptedvalue(::std::string* acceptedvalue) {
  if (acceptedvalue != NULL) {
    set_has_acceptedvalue();
  } else {
    clear_has_acceptedvalue();
  }
  acceptedvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acceptedvalue);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.AcceptorStateData.AcceptedValue)
}

// required uint32 Checksum = 7;
bool AcceptorStateData::has_checksum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AcceptorStateData::set_has_checksum() {
  _has_bits_[0] |= 0x00000040u;
}
void AcceptorStateData::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000040u;
}
void AcceptorStateData::clear_checksum() {
  checksum_ = 0u;
  clear_has_checksum();
}
 ::google::protobuf::uint32 AcceptorStateData::checksum() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.Checksum)
  return checksum_;
}
 void AcceptorStateData::set_checksum(::google::protobuf::uint32 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.Checksum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaxosNodeInfo::kRidFieldNumber;
const int PaxosNodeInfo::kNodeidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaxosNodeInfo::PaxosNodeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.PaxosNodeInfo)
}

void PaxosNodeInfo::InitAsDefaultInstance() {
}

PaxosNodeInfo::PaxosNodeInfo(const PaxosNodeInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phxpaxos.PaxosNodeInfo)
}

void PaxosNodeInfo::SharedCtor() {
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  nodeid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PaxosNodeInfo::~PaxosNodeInfo() {
  // @@protoc_insertion_point(destructor:phxpaxos.PaxosNodeInfo)
  SharedDtor();
}

void PaxosNodeInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PaxosNodeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaxosNodeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PaxosNodeInfo_descriptor_;
}

const PaxosNodeInfo& PaxosNodeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_paxos_5fmsg_2eproto();
  return *default_instance_;
}

PaxosNodeInfo* PaxosNodeInfo::default_instance_ = NULL;

PaxosNodeInfo* PaxosNodeInfo::New(::google::protobuf::Arena* arena) const {
  PaxosNodeInfo* n = new PaxosNodeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaxosNodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.PaxosNodeInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PaxosNodeInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PaxosNodeInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rid_, nodeid_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PaxosNodeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.PaxosNodeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));
          set_has_rid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Nodeid;
        break;
      }

      // required uint64 Nodeid = 2;
      case 2: {
        if (tag == 16) {
         parse_Nodeid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.PaxosNodeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.PaxosNodeInfo)
  return false;
#undef DO_
}

void PaxosNodeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.PaxosNodeInfo)
  // required uint64 Rid = 1;
  if (has_rid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // required uint64 Nodeid = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nodeid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.PaxosNodeInfo)
}

::google::protobuf::uint8* PaxosNodeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.PaxosNodeInfo)
  // required uint64 Rid = 1;
  if (has_rid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // required uint64 Nodeid = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->nodeid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.PaxosNodeInfo)
  return target;
}

int PaxosNodeInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.PaxosNodeInfo)
  int total_size = 0;

  if (has_rid()) {
    // required uint64 Rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  if (has_nodeid()) {
    // required uint64 Nodeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nodeid());
  }

  return total_size;
}
int PaxosNodeInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.PaxosNodeInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 Rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());

    // required uint64 Nodeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nodeid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaxosNodeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.PaxosNodeInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PaxosNodeInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PaxosNodeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.PaxosNodeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.PaxosNodeInfo)
    MergeFrom(*source);
  }
}

void PaxosNodeInfo::MergeFrom(const PaxosNodeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.PaxosNodeInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rid()) {
      set_rid(from.rid());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PaxosNodeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.PaxosNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaxosNodeInfo::CopyFrom(const PaxosNodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.PaxosNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaxosNodeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PaxosNodeInfo::Swap(PaxosNodeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaxosNodeInfo::InternalSwap(PaxosNodeInfo* other) {
  std::swap(rid_, other->rid_);
  std::swap(nodeid_, other->nodeid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaxosNodeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PaxosNodeInfo_descriptor_;
  metadata.reflection = PaxosNodeInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PaxosNodeInfo

// required uint64 Rid = 1;
bool PaxosNodeInfo::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PaxosNodeInfo::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
void PaxosNodeInfo::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PaxosNodeInfo::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
 ::google::protobuf::uint64 PaxosNodeInfo::rid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosNodeInfo.Rid)
  return rid_;
}
 void PaxosNodeInfo::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosNodeInfo.Rid)
}

// required uint64 Nodeid = 2;
bool PaxosNodeInfo::has_nodeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PaxosNodeInfo::set_has_nodeid() {
  _has_bits_[0] |= 0x00000002u;
}
void PaxosNodeInfo::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000002u;
}
void PaxosNodeInfo::clear_nodeid() {
  nodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_nodeid();
}
 ::google::protobuf::uint64 PaxosNodeInfo::nodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosNodeInfo.Nodeid)
  return nodeid_;
}
 void PaxosNodeInfo::set_nodeid(::google::protobuf::uint64 value) {
  set_has_nodeid();
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosNodeInfo.Nodeid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemVariables::kGidFieldNumber;
const int SystemVariables::kMemberShipFieldNumber;
const int SystemVariables::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemVariables::SystemVariables()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.SystemVariables)
}

void SystemVariables::InitAsDefaultInstance() {
}

SystemVariables::SystemVariables(const SystemVariables& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phxpaxos.SystemVariables)
}

void SystemVariables::SharedCtor() {
  _cached_size_ = 0;
  gid_ = GOOGLE_ULONGLONG(0);
  version_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SystemVariables::~SystemVariables() {
  // @@protoc_insertion_point(destructor:phxpaxos.SystemVariables)
  SharedDtor();
}

void SystemVariables::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SystemVariables::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemVariables::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemVariables_descriptor_;
}

const SystemVariables& SystemVariables::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_paxos_5fmsg_2eproto();
  return *default_instance_;
}

SystemVariables* SystemVariables::default_instance_ = NULL;

SystemVariables* SystemVariables::New(::google::protobuf::Arena* arena) const {
  SystemVariables* n = new SystemVariables;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SystemVariables::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.SystemVariables)
  if (_has_bits_[0 / 32] & 5u) {
    gid_ = GOOGLE_ULONGLONG(0);
    version_ = GOOGLE_ULONGLONG(0);
  }
  membership_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SystemVariables::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.SystemVariables)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 Gid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gid_)));
          set_has_gid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_MemberShip;
        break;
      }

      // repeated .phxpaxos.PaxosNodeInfo MemberShip = 2;
      case 2: {
        if (tag == 18) {
         parse_MemberShip:
          DO_(input->IncrementRecursionDepth());
         parse_loop_MemberShip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_membership()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_MemberShip;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_Version;
        break;
      }

      // required uint64 Version = 3;
      case 3: {
        if (tag == 24) {
         parse_Version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.SystemVariables)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.SystemVariables)
  return false;
#undef DO_
}

void SystemVariables::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.SystemVariables)
  // required uint64 Gid = 1;
  if (has_gid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gid(), output);
  }

  // repeated .phxpaxos.PaxosNodeInfo MemberShip = 2;
  for (unsigned int i = 0, n = this->membership_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->membership(i), output);
  }

  // required uint64 Version = 3;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.SystemVariables)
}

::google::protobuf::uint8* SystemVariables::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.SystemVariables)
  // required uint64 Gid = 1;
  if (has_gid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gid(), target);
  }

  // repeated .phxpaxos.PaxosNodeInfo MemberShip = 2;
  for (unsigned int i = 0, n = this->membership_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->membership(i), false, target);
  }

  // required uint64 Version = 3;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.SystemVariables)
  return target;
}

int SystemVariables::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.SystemVariables)
  int total_size = 0;

  if (has_gid()) {
    // required uint64 Gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());
  }

  if (has_version()) {
    // required uint64 Version = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  return total_size;
}
int SystemVariables::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.SystemVariables)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required uint64 Gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());

    // required uint64 Version = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .phxpaxos.PaxosNodeInfo MemberShip = 2;
  total_size += 1 * this->membership_size();
  for (int i = 0; i < this->membership_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->membership(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemVariables::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.SystemVariables)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SystemVariables* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemVariables>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.SystemVariables)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.SystemVariables)
    MergeFrom(*source);
  }
}

void SystemVariables::MergeFrom(const SystemVariables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.SystemVariables)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  membership_.MergeFrom(from.membership_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gid()) {
      set_gid(from.gid());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SystemVariables::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.SystemVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemVariables::CopyFrom(const SystemVariables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.SystemVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemVariables::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->membership())) return false;
  return true;
}

void SystemVariables::Swap(SystemVariables* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemVariables::InternalSwap(SystemVariables* other) {
  std::swap(gid_, other->gid_);
  membership_.UnsafeArenaSwap(&other->membership_);
  std::swap(version_, other->version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SystemVariables::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SystemVariables_descriptor_;
  metadata.reflection = SystemVariables_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SystemVariables

// required uint64 Gid = 1;
bool SystemVariables::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SystemVariables::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
void SystemVariables::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SystemVariables::clear_gid() {
  gid_ = GOOGLE_ULONGLONG(0);
  clear_has_gid();
}
 ::google::protobuf::uint64 SystemVariables::gid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.SystemVariables.Gid)
  return gid_;
}
 void SystemVariables::set_gid(::google::protobuf::uint64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.SystemVariables.Gid)
}

// repeated .phxpaxos.PaxosNodeInfo MemberShip = 2;
int SystemVariables::membership_size() const {
  return membership_.size();
}
void SystemVariables::clear_membership() {
  membership_.Clear();
}
const ::phxpaxos::PaxosNodeInfo& SystemVariables::membership(int index) const {
  // @@protoc_insertion_point(field_get:phxpaxos.SystemVariables.MemberShip)
  return membership_.Get(index);
}
::phxpaxos::PaxosNodeInfo* SystemVariables::mutable_membership(int index) {
  // @@protoc_insertion_point(field_mutable:phxpaxos.SystemVariables.MemberShip)
  return membership_.Mutable(index);
}
::phxpaxos::PaxosNodeInfo* SystemVariables::add_membership() {
  // @@protoc_insertion_point(field_add:phxpaxos.SystemVariables.MemberShip)
  return membership_.Add();
}
::google::protobuf::RepeatedPtrField< ::phxpaxos::PaxosNodeInfo >*
SystemVariables::mutable_membership() {
  // @@protoc_insertion_point(field_mutable_list:phxpaxos.SystemVariables.MemberShip)
  return &membership_;
}
const ::google::protobuf::RepeatedPtrField< ::phxpaxos::PaxosNodeInfo >&
SystemVariables::membership() const {
  // @@protoc_insertion_point(field_list:phxpaxos.SystemVariables.MemberShip)
  return membership_;
}

// required uint64 Version = 3;
bool SystemVariables::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SystemVariables::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
void SystemVariables::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
void SystemVariables::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
 ::google::protobuf::uint64 SystemVariables::version() const {
  // @@protoc_insertion_point(field_get:phxpaxos.SystemVariables.Version)
  return version_;
}
 void SystemVariables::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.SystemVariables.Version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterVariables::kMasterNodeidFieldNumber;
const int MasterVariables::kVersionFieldNumber;
const int MasterVariables::kLeaseTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterVariables::MasterVariables()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.MasterVariables)
}

void MasterVariables::InitAsDefaultInstance() {
}

MasterVariables::MasterVariables(const MasterVariables& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phxpaxos.MasterVariables)
}

void MasterVariables::SharedCtor() {
  _cached_size_ = 0;
  masternodeid_ = GOOGLE_ULONGLONG(0);
  version_ = GOOGLE_ULONGLONG(0);
  leasetime_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MasterVariables::~MasterVariables() {
  // @@protoc_insertion_point(destructor:phxpaxos.MasterVariables)
  SharedDtor();
}

void MasterVariables::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MasterVariables::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MasterVariables::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MasterVariables_descriptor_;
}

const MasterVariables& MasterVariables::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_paxos_5fmsg_2eproto();
  return *default_instance_;
}

MasterVariables* MasterVariables::default_instance_ = NULL;

MasterVariables* MasterVariables::New(::google::protobuf::Arena* arena) const {
  MasterVariables* n = new MasterVariables;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MasterVariables::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.MasterVariables)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MasterVariables, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MasterVariables*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(masternodeid_, leasetime_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MasterVariables::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.MasterVariables)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 MasterNodeid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &masternodeid_)));
          set_has_masternodeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Version;
        break;
      }

      // required uint64 Version = 2;
      case 2: {
        if (tag == 16) {
         parse_Version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LeaseTime;
        break;
      }

      // required uint32 LeaseTime = 3;
      case 3: {
        if (tag == 24) {
         parse_LeaseTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leasetime_)));
          set_has_leasetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.MasterVariables)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.MasterVariables)
  return false;
#undef DO_
}

void MasterVariables::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.MasterVariables)
  // required uint64 MasterNodeid = 1;
  if (has_masternodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->masternodeid(), output);
  }

  // required uint64 Version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->version(), output);
  }

  // required uint32 LeaseTime = 3;
  if (has_leasetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->leasetime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.MasterVariables)
}

::google::protobuf::uint8* MasterVariables::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.MasterVariables)
  // required uint64 MasterNodeid = 1;
  if (has_masternodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->masternodeid(), target);
  }

  // required uint64 Version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->version(), target);
  }

  // required uint32 LeaseTime = 3;
  if (has_leasetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->leasetime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.MasterVariables)
  return target;
}

int MasterVariables::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.MasterVariables)
  int total_size = 0;

  if (has_masternodeid()) {
    // required uint64 MasterNodeid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->masternodeid());
  }

  if (has_version()) {
    // required uint64 Version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  if (has_leasetime()) {
    // required uint32 LeaseTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leasetime());
  }

  return total_size;
}
int MasterVariables::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.MasterVariables)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 MasterNodeid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->masternodeid());

    // required uint64 Version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());

    // required uint32 LeaseTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leasetime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MasterVariables::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.MasterVariables)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MasterVariables* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MasterVariables>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.MasterVariables)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.MasterVariables)
    MergeFrom(*source);
  }
}

void MasterVariables::MergeFrom(const MasterVariables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.MasterVariables)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_masternodeid()) {
      set_masternodeid(from.masternodeid());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_leasetime()) {
      set_leasetime(from.leasetime());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MasterVariables::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.MasterVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterVariables::CopyFrom(const MasterVariables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.MasterVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterVariables::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MasterVariables::Swap(MasterVariables* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterVariables::InternalSwap(MasterVariables* other) {
  std::swap(masternodeid_, other->masternodeid_);
  std::swap(version_, other->version_);
  std::swap(leasetime_, other->leasetime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MasterVariables::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MasterVariables_descriptor_;
  metadata.reflection = MasterVariables_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MasterVariables

// required uint64 MasterNodeid = 1;
bool MasterVariables::has_masternodeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MasterVariables::set_has_masternodeid() {
  _has_bits_[0] |= 0x00000001u;
}
void MasterVariables::clear_has_masternodeid() {
  _has_bits_[0] &= ~0x00000001u;
}
void MasterVariables::clear_masternodeid() {
  masternodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_masternodeid();
}
 ::google::protobuf::uint64 MasterVariables::masternodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterVariables.MasterNodeid)
  return masternodeid_;
}
 void MasterVariables::set_masternodeid(::google::protobuf::uint64 value) {
  set_has_masternodeid();
  masternodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterVariables.MasterNodeid)
}

// required uint64 Version = 2;
bool MasterVariables::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MasterVariables::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void MasterVariables::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void MasterVariables::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
 ::google::protobuf::uint64 MasterVariables::version() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterVariables.Version)
  return version_;
}
 void MasterVariables::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterVariables.Version)
}

// required uint32 LeaseTime = 3;
bool MasterVariables::has_leasetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MasterVariables::set_has_leasetime() {
  _has_bits_[0] |= 0x00000004u;
}
void MasterVariables::clear_has_leasetime() {
  _has_bits_[0] &= ~0x00000004u;
}
void MasterVariables::clear_leasetime() {
  leasetime_ = 0u;
  clear_has_leasetime();
}
 ::google::protobuf::uint32 MasterVariables::leasetime() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterVariables.LeaseTime)
  return leasetime_;
}
 void MasterVariables::set_leasetime(::google::protobuf::uint32 value) {
  set_has_leasetime();
  leasetime_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterVariables.LeaseTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaxosValue::kSMIDFieldNumber;
const int PaxosValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaxosValue::PaxosValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.PaxosValue)
}

void PaxosValue::InitAsDefaultInstance() {
}

PaxosValue::PaxosValue(const PaxosValue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phxpaxos.PaxosValue)
}

void PaxosValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smid_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PaxosValue::~PaxosValue() {
  // @@protoc_insertion_point(destructor:phxpaxos.PaxosValue)
  SharedDtor();
}

void PaxosValue::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PaxosValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaxosValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PaxosValue_descriptor_;
}

const PaxosValue& PaxosValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_paxos_5fmsg_2eproto();
  return *default_instance_;
}

PaxosValue* PaxosValue::default_instance_ = NULL;

PaxosValue* PaxosValue::New(::google::protobuf::Arena* arena) const {
  PaxosValue* n = new PaxosValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaxosValue::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.PaxosValue)
  if (_has_bits_[0 / 32] & 3u) {
    smid_ = 0;
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PaxosValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.PaxosValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 SMID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &smid_)));
          set_has_smid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Value;
        break;
      }

      // required bytes Value = 2;
      case 2: {
        if (tag == 18) {
         parse_Value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.PaxosValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.PaxosValue)
  return false;
#undef DO_
}

void PaxosValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.PaxosValue)
  // required int32 SMID = 1;
  if (has_smid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->smid(), output);
  }

  // required bytes Value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.PaxosValue)
}

::google::protobuf::uint8* PaxosValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.PaxosValue)
  // required int32 SMID = 1;
  if (has_smid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->smid(), target);
  }

  // required bytes Value = 2;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.PaxosValue)
  return target;
}

int PaxosValue::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.PaxosValue)
  int total_size = 0;

  if (has_smid()) {
    // required int32 SMID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->smid());
  }

  if (has_value()) {
    // required bytes Value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  return total_size;
}
int PaxosValue::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.PaxosValue)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 SMID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->smid());

    // required bytes Value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaxosValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.PaxosValue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PaxosValue* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PaxosValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.PaxosValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.PaxosValue)
    MergeFrom(*source);
  }
}

void PaxosValue::MergeFrom(const PaxosValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.PaxosValue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smid()) {
      set_smid(from.smid());
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PaxosValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.PaxosValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaxosValue::CopyFrom(const PaxosValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.PaxosValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaxosValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PaxosValue::Swap(PaxosValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaxosValue::InternalSwap(PaxosValue* other) {
  std::swap(smid_, other->smid_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaxosValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PaxosValue_descriptor_;
  metadata.reflection = PaxosValue_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PaxosValue

// required int32 SMID = 1;
bool PaxosValue::has_smid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PaxosValue::set_has_smid() {
  _has_bits_[0] |= 0x00000001u;
}
void PaxosValue::clear_has_smid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PaxosValue::clear_smid() {
  smid_ = 0;
  clear_has_smid();
}
 ::google::protobuf::int32 PaxosValue::smid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosValue.SMID)
  return smid_;
}
 void PaxosValue::set_smid(::google::protobuf::int32 value) {
  set_has_smid();
  smid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosValue.SMID)
}

// required bytes Value = 2;
bool PaxosValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PaxosValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void PaxosValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void PaxosValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& PaxosValue::value() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosValue.Value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PaxosValue::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosValue.Value)
}
 void PaxosValue::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.PaxosValue.Value)
}
 void PaxosValue::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.PaxosValue.Value)
}
 ::std::string* PaxosValue::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:phxpaxos.PaxosValue.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PaxosValue::release_value() {
  // @@protoc_insertion_point(field_release:phxpaxos.PaxosValue.Value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PaxosValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.PaxosValue.Value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchPaxosValues::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchPaxosValues::BatchPaxosValues()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.BatchPaxosValues)
}

void BatchPaxosValues::InitAsDefaultInstance() {
}

BatchPaxosValues::BatchPaxosValues(const BatchPaxosValues& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:phxpaxos.BatchPaxosValues)
}

void BatchPaxosValues::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BatchPaxosValues::~BatchPaxosValues() {
  // @@protoc_insertion_point(destructor:phxpaxos.BatchPaxosValues)
  SharedDtor();
}

void BatchPaxosValues::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BatchPaxosValues::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchPaxosValues::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchPaxosValues_descriptor_;
}

const BatchPaxosValues& BatchPaxosValues::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_paxos_5fmsg_2eproto();
  return *default_instance_;
}

BatchPaxosValues* BatchPaxosValues::default_instance_ = NULL;

BatchPaxosValues* BatchPaxosValues::New(::google::protobuf::Arena* arena) const {
  BatchPaxosValues* n = new BatchPaxosValues;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchPaxosValues::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.BatchPaxosValues)
  values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BatchPaxosValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.BatchPaxosValues)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .phxpaxos.PaxosValue Values = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Values;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.BatchPaxosValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.BatchPaxosValues)
  return false;
#undef DO_
}

void BatchPaxosValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.BatchPaxosValues)
  // repeated .phxpaxos.PaxosValue Values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.BatchPaxosValues)
}

::google::protobuf::uint8* BatchPaxosValues::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.BatchPaxosValues)
  // repeated .phxpaxos.PaxosValue Values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->values(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.BatchPaxosValues)
  return target;
}

int BatchPaxosValues::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.BatchPaxosValues)
  int total_size = 0;

  // repeated .phxpaxos.PaxosValue Values = 1;
  total_size += 1 * this->values_size();
  for (int i = 0; i < this->values_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->values(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchPaxosValues::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.BatchPaxosValues)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BatchPaxosValues* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchPaxosValues>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.BatchPaxosValues)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.BatchPaxosValues)
    MergeFrom(*source);
  }
}

void BatchPaxosValues::MergeFrom(const BatchPaxosValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.BatchPaxosValues)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  values_.MergeFrom(from.values_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BatchPaxosValues::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.BatchPaxosValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchPaxosValues::CopyFrom(const BatchPaxosValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.BatchPaxosValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchPaxosValues::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->values())) return false;
  return true;
}

void BatchPaxosValues::Swap(BatchPaxosValues* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchPaxosValues::InternalSwap(BatchPaxosValues* other) {
  values_.UnsafeArenaSwap(&other->values_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchPaxosValues::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BatchPaxosValues_descriptor_;
  metadata.reflection = BatchPaxosValues_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchPaxosValues

// repeated .phxpaxos.PaxosValue Values = 1;
int BatchPaxosValues::values_size() const {
  return values_.size();
}
void BatchPaxosValues::clear_values() {
  values_.Clear();
}
const ::phxpaxos::PaxosValue& BatchPaxosValues::values(int index) const {
  // @@protoc_insertion_point(field_get:phxpaxos.BatchPaxosValues.Values)
  return values_.Get(index);
}
::phxpaxos::PaxosValue* BatchPaxosValues::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:phxpaxos.BatchPaxosValues.Values)
  return values_.Mutable(index);
}
::phxpaxos::PaxosValue* BatchPaxosValues::add_values() {
  // @@protoc_insertion_point(field_add:phxpaxos.BatchPaxosValues.Values)
  return values_.Add();
}
::google::protobuf::RepeatedPtrField< ::phxpaxos::PaxosValue >*
BatchPaxosValues::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:phxpaxos.BatchPaxosValues.Values)
  return &values_;
}
const ::google::protobuf::RepeatedPtrField< ::phxpaxos::PaxosValue >&
BatchPaxosValues::values() const {
  // @@protoc_insertion_point(field_list:phxpaxos.BatchPaxosValues.Values)
  return values_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace phxpaxos

// @@protoc_insertion_point(global_scope)
